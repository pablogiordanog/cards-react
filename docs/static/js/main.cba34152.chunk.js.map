{"version":3,"sources":["components/Card.jsx","components/Cards.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","lang","img","fcolor","scolor","className","style","background","src","alt","propType","PropTypes","string","Cards","map","url","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPAIMA,EAAO,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,IAAKC,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,OAG3B,OACQ,sBAAKC,UAAU,OAAOC,MAAO,CACrBC,WAAW,4BAAD,OAA8BJ,EAA9B,aAAyCC,EAAzC,MADlB,UAGQ,qBAAKI,IAAKN,EAAKO,IAAI,aACnB,6BAAKR,QAK7BD,EAAKU,SAAW,CACRT,KAAMU,IAAUC,OAChBV,IAAKS,IAAUC,OACfT,OAAQQ,IAAUC,OAClBR,OAAQO,IAAUC,QAGXZ,QCiBAa,EArCD,WA4BN,OACQ,mCA3BK,CACL,CACQ,KAAQ,SACR,IAAO,2CACP,OAAU,UACV,OAAU,WAElB,CACQ,KAAQ,OACR,IAAO,yCACP,OAAU,UACV,OAAU,WAElB,CACQ,KAAQ,QACR,IAAO,0CACP,OAAU,UACV,OAAU,WAElB,CACQ,KAAQ,OACR,IAAO,yCACP,OAAU,UACV,OAAU,YAKJC,KAAI,YAAoC,IAAjCb,EAAgC,EAAhCA,KAAMc,EAA0B,EAA1BA,IAAKZ,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,OACxB,OAAO,cAAC,EAAD,CAAiBH,KAAMA,EAAMC,IAAKa,EAAKZ,OAAQA,EAAQC,OAAQA,GAApDH,SCxBnCe,G,KANH,WAEV,OAAO,cAAC,EAAD,MCKMC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.cba34152.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport \"./Card.css\";\n\nconst Card = ({ lang, img, fcolor, scolor }) => {\n\n        //console.log(PropTypes);\n        return (\n                <div className=\"card\" style={{\n                        background: `linear-gradient(to left, ${fcolor}, ${scolor})`,\n                }}>\n                        <img src={img} alt=\"lang.svg\" />\n                        <h3>{lang}</h3>\n                </div>\n        )\n}\n\nCard.propType = {\n        lang: PropTypes.string,\n        img: PropTypes.string,\n        fcolor: PropTypes.string,\n        scolor: PropTypes.string,\n}\n\nexport default Card\n","import React from 'react'\nimport Card from './Card'\n\n\nconst Cards = () => {\n\n        const data = [\n                {\n                        \"lang\": \"Python\",\n                        \"url\": \"https://cdn.svgporn.com/logos/python.svg\",\n                        \"fcolor\": \"#00c3ff\",\n                        \"scolor\": \"#ffff1c\"\n                },\n                {\n                        \"lang\": \"Java\",\n                        \"url\": \"https://cdn.svgporn.com/logos/java.svg\",\n                        \"fcolor\": \"#D31027\",\n                        \"scolor\": \"#EA384D\"\n                },\n                {\n                        \"lang\": \"React\",\n                        \"url\": \"https://cdn.svgporn.com/logos/react.svg\",\n                        \"fcolor\": \"#000428\",\n                        \"scolor\": \"#004e92\"\n                },\n                {\n                        \"lang\": \"Perl\",\n                        \"url\": \"https://cdn.svgporn.com/logos/perl.svg\",\n                        \"fcolor\": \"#cc2b5e\",\n                        \"scolor\": \"#753a88\"\n                }];\n        //console.log(data);\n        return (\n                <>\n                        {data.map(({ lang, url, fcolor, scolor }) => {\n                                return <Card key={lang} lang={lang} img={url} fcolor={fcolor} scolor={scolor} />;\n                        })}\n                </>\n        )\n}\n\nexport default Cards\n","import React from 'react'\nimport Card from './components/Card';\nimport Cards from './components/Cards';\nimport Contador from './components/Contador';\n\nconst App = () => {\n  //return <Contador inicial={5} factor={3} />;\n  return <Cards />;\n};\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}